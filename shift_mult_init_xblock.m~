%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                             %
%   Center for Astronomy Signal Processing and Electronics Research           %
%   http://casper.berkeley.edu                                                %      
%   Copyright (C) 2011    Hong Chen                                           %
%                                                                             %
%   This program is free software; you can redistribute it and/or modify      %
%   it under the terms of the GNU General Public License as published by      %
%   the Free Software Foundation; either version 2 of the License, or         %
%   (at your option) any later version.                                       %
%                                                                             %
%   This program is distributed in the hope that it will be useful,           %
%   but WITHOUT ANY WARRANTY; without even the implied warranty of            %
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             %
%   GNU General Public License for more details.                              %
%                                                                             %
%   You should have received a copy of the GNU General Public License along   %
%   with this program; if not, write to the Free Software Foundation, Inc.,   %
%   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.               %
%                                                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function shift_mult_init_xblock(const,add_latency)

inport = xInport('in');
outport = xOutport('out');

const_binary = dec2bin(const);
len = length(const_binary);
len1 = length(find(const_binar

shifts = cell(1,len);
shift_out = cell(1,len1);
for i = 1:len
    if const_binary(len-i+1) 
        shift_out{i} = xSignal(['shift_out',num2str(i)]);
        shifts{i} = xBlock(struct('source','Shift','name', ['shift',num2str(i)]), ...
                            struct('shift_dir', 'Left', ...
                                    'shift_bits', i-1, ...
                                    'latency', 0, ...
                                    'Precision','Full'), ...
                                    {inport}, ...
                                    {shift_out{i}});
    end
    shift_out{i} = inport;
    shifts{i} = const_binary(len-i+1);
end


end