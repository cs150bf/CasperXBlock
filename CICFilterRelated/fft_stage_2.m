function fft_stage_2(FFTSize, FFTStage, input_bit_width, coeff_bit_width, downshift, add_latency, mult_latency, bram_latency, conv_latency, quantization, overflow, arch, opt_target, delays_bram, coeffs_bram, use_hdl, use_embedded, hardcode_shifts, dsp48_adders)
% This is a generated function based on subsystem:
%     single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2
% Though there are limitations about the generated script, 
% the main purpose of this utility is to make learning
% Sysgen Script easier.
% 
% To test it, run the following commands from MATLAB console:
% cfg.source = str2func('fft_stage_2');
% cfg.toplevel = 'single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2';
% args = {my_FFTSize, my_FFTStage, my_input_bit_width, my_coeff_bit_width, my_downshift, my_add_latency, my_mult_latency, my_bram_latency, my_conv_latency, my_quantization, my_overflow, my_arch, my_opt_target, my_delays_bram, my_coeffs_bram, my_use_hdl, my_use_embedded, my_hardcode_shifts, my_dsp48_adders};
% xBlock(cfg, args);
% 
% You can edit fft_stage_2.m to debug your script.
% 
% You can also replace the MaskInitialization code with the 
% following commands so the subsystem will be generated 
% according to the values of mask parameters.
% cfg.source = str2func('fft_stage_2');
% cfg.toplevel = gcb;
% args = {FFTSize, FFTStage, input_bit_width, coeff_bit_width, downshift, add_latency, mult_latency, bram_latency, conv_latency, quantization, overflow, arch, opt_target, delays_bram, coeffs_bram, use_hdl, use_embedded, hardcode_shifts, dsp48_adders};
% xBlock(cfg, args);
% 
% To configure the xBlock call in debug mode, in which mode,
% autolayout will be performed every time a block is added,
% run the following commands:
% cfg.source = str2func('fft_stage_2');
% cfg.toplevel = gcb;
% cfg.debug = 1;
% args = {FFTSize, FFTStage, input_bit_width, coeff_bit_width, downshift, add_latency, mult_latency, bram_latency, conv_latency, quantization, overflow, arch, opt_target, delays_bram, coeffs_bram, use_hdl, use_embedded, hardcode_shifts, dsp48_adders};
% xBlock(cfg, args);
% 
% To make the xBlock smart so it won't re-generate the
% subsystem if neither the arguments nor the scripts are
% changes, use as the following:
% cfg.source = str2func('fft_stage_2');
% cfg.toplevel = gcb;
% cfg.depend = {'fft_stage_2'};
% args = {FFTSize, FFTStage, input_bit_width, coeff_bit_width, downshift, add_latency, mult_latency, bram_latency, conv_latency, quantization, overflow, arch, opt_target, delays_bram, coeffs_bram, use_hdl, use_embedded, hardcode_shifts, dsp48_adders};
% xBlock(cfg, args);
% 
% See also xBlock, xInport, xOutport, xSignal, xlsub2script.


%% inports
xlsub5_in1 = xInport('in1');
xlsub5_in2 = xInport('in2');
xlsub5_of_in = xInport('of_in');
xlsub5_sync = xInport('sync');
xlsub5_shift = xInport('shift');

%% outports
xlsub5_out1 = xOutport('out1');
xlsub5_out2 = xOutport('out2');
xlsub5_of = xOutport('of');
xlsub5_sync_out = xOutport('sync_out');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Counter
xlsub5_Counter_out1 = xSignal;
xlsub5_Counter = xBlock(struct('source', 'Counter', 'name', 'Counter'), ...
                        struct('n_bits', FFTSize-FFTStage+1, ...
                               'rst', 'on', ...
                               'explicit_period', 'off', ...
                               'use_rpm', 'off'), ...
                        {xlsub5_sync}, ...
                        {xlsub5_Counter_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Delay
xlsub5_Delay_out1 = xSignal;
xlsub5_Delay = xBlock(struct('source', 'Delay', 'name', 'Delay'), ...
                      [], ...
                      {xlsub5_sync}, ...
                      {xlsub5_Delay_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Logical1
xlsub5_butterfly_direct_out3 = xSignal;
xlsub5_Logical1 = xBlock(struct('source', 'Logical', 'name', 'Logical1'), ...
                         struct('logical_function', 'OR', ...
                                'latency', 1, ...
                                'n_bits', 8, ...
                                'bin_pt', 2), ...
                         {xlsub5_butterfly_direct_out3, xlsub5_of_in}, ...
                         {xlsub5_of});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Mux
xlsub5_Slice1_out1 = xSignal;
xlsub5_delay_f_out1 = xSignal;
xlsub5_Mux_out1 = xSignal;
xlsub5_Mux = xBlock(struct('source', 'Mux', 'name', 'Mux'), ...
                    struct('latency', 1, ...
                           'arith_type', 'Signed  (2''s comp)', ...
                           'n_bits', 8, ...
                           'bin_pt', 2), ...
                    {xlsub5_Slice1_out1, xlsub5_delay_f_out1, xlsub5_in1}, ...
                    {xlsub5_Mux_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Mux1
xlsub5_Mux1_out1 = xSignal;
xlsub5_Mux1 = xBlock(struct('source', 'Mux', 'name', 'Mux1'), ...
                     struct('latency', 1, ...
                            'arith_type', 'Signed  (2''s comp)', ...
                            'n_bits', 8, ...
                            'bin_pt', 2), ...
                     {xlsub5_Slice1_out1, xlsub5_in1, xlsub5_delay_f_out1}, ...
                     {xlsub5_Mux1_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Slice
xlsub5_Slice_out1 = xSignal;
xlsub5_Slice = xBlock(struct('source', 'Slice', 'name', 'Slice'), ...
                      struct('boolean_output', 'on', ...
                             'mode', 'Lower Bit Location + Width', ...
                             'bit1', -(FFTStage - 1), ...
                             'bit0', FFTStage - 1), ...
                      {xlsub5_shift}, ...
                      {xlsub5_Slice_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/Slice1
xlsub5_Slice1 = xBlock(struct('source', 'Slice', 'name', 'Slice1'), ...
                       [], ...
                       {xlsub5_Counter_out1}, ...
                       {xlsub5_Slice1_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/sync_delay
xlsub5_sync_delay_out1 = xSignal;
xlsub5_sync_delay = xBlock(struct('source', 'casper_library_delays/sync_delay', 'name', 'sync_delay'), ...
                           struct('DelayLen', 2^(FFTSize - FFTStage)), ...
                           {xlsub5_Delay_out1}, ...
                           {xlsub5_sync_delay_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct
xlsub5_delay_b_out1 = xSignal;
xlsub5_butterfly_direct_sub = xBlock(struct('source', @xlsub5_butterfly_direct, 'name', 'butterfly_direct'), ...
                                 {'on', 8, [0                                      1], 6, 18, 18, 'on', 2, 3, 2, 1, 'Truncate', 'Wrap', 'Virtex5', 'logic', 'off', 'off', 'on', 'on', 'on'}, ...
                                 {xlsub5_delay_b_out1, xlsub5_Mux_out1, xlsub5_sync_delay_out1, xlsub5_Slice_out1}, ...
                                 {xlsub5_out1, xlsub5_out2, xlsub5_butterfly_direct_out3, xlsub5_sync_out});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_b
xlsub5_delay_b_sub = xBlock(struct('source', @xlsub5_delay_b, 'name', 'delay_b'), ...
                        {2^(FFTSize-FFTStage), bram_latency, 'off'}, ...
                        {xlsub5_Mux1_out1}, ...
                        {xlsub5_delay_b_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_f
xlsub5_delay_f_sub = xBlock(struct('source', @xlsub5_delay_f, 'name', 'delay_f'), ...
                        {2^(FFTSize-FFTStage), bram_latency, 'off'}, ...
                        {xlsub5_in2}, ...
                        {xlsub5_delay_f_out1});



function xlsub5_butterfly_direct(biplex, FFTSize, Coeffs, StepPeriod, coeff_bit_width, input_bit_width, downshift, add_latency, mult_latency, bram_latency, conv_latency, quantization, overflow, arch, opt_target, coeffs_bram, use_hdl, use_embedded, hardcode_shifts, dsp48_adders)



%% inports
xlsub6_a = xInport('a');
xlsub6_b = xInport('b');
xlsub6_sync = xInport('sync');
xlsub6_shift = xInport('shift');

%% outports
xlsub6_outport1 = xOutport('a+bw');
xlsub6_a_bw = xOutport('a-bw');
xlsub6_of = xOutport('of');
xlsub6_sync_out = xOutport('sync_out');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/Logical
xlsub6_convert_of0_out2 = xSignal;
xlsub6_convert_of1_out2 = xSignal;
xlsub6_convert_of2_out2 = xSignal;
xlsub6_convert_of3_out2 = xSignal;
xlsub6_Logical = xBlock(struct('source', 'Logical', 'name', 'Logical'), ...
                        struct('logical_function', 'OR', ...
                               'inputs', 4), ...
                        {xlsub6_convert_of0_out2, xlsub6_convert_of1_out2, xlsub6_convert_of2_out2, xlsub6_convert_of3_out2}, ...
                        {xlsub6_of});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/Scale0
xlsub6_cadd_out1 = xSignal;
xlsub6_Scale0_out1 = xSignal;
xlsub6_Scale0 = xBlock(struct('source', 'Scale', 'name', 'Scale0'), ...
                       struct('scale_factor', -1), ...
                       {xlsub6_cadd_out1}, ...
                       {xlsub6_Scale0_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/Scale1
xlsub6_cadd_out2 = xSignal;
xlsub6_Scale1_out1 = xSignal;
xlsub6_Scale1 = xBlock(struct('source', 'Scale', 'name', 'Scale1'), ...
                       struct('scale_factor', -1), ...
                       {xlsub6_cadd_out2}, ...
                       {xlsub6_Scale1_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/Scale2
xlsub6_csub_out1 = xSignal;
xlsub6_Scale2_out1 = xSignal;
xlsub6_Scale2 = xBlock(struct('source', 'Scale', 'name', 'Scale2'), ...
                       struct('scale_factor', -1), ...
                       {xlsub6_csub_out1}, ...
                       {xlsub6_Scale2_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/Scale3
xlsub6_csub_out2 = xSignal;
xlsub6_Scale3_out1 = xSignal;
xlsub6_Scale3 = xBlock(struct('source', 'Scale', 'name', 'Scale3'), ...
                       struct('scale_factor', -1), ...
                       {xlsub6_csub_out2}, ...
                       {xlsub6_Scale3_out1});


% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/ri_to_c01
xlsub6_convert_of0_out1 = xSignal;
xlsub6_convert_of1_out1 = xSignal;
xlsub6_ri_to_c01 = xBlock(struct('source', 'casper_library_misc/ri_to_c', 'name', 'ri_to_c01'), ...
                          [], ...
                          {xlsub6_convert_of0_out1, xlsub6_convert_of1_out1}, ...
                          {xlsub6_outport1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/ri_to_c23
xlsub6_convert_of2_out1 = xSignal;
xlsub6_convert_of3_out1 = xSignal;
xlsub6_ri_to_c23 = xBlock(struct('source', 'casper_library_misc/ri_to_c', 'name', 'ri_to_c23'), ...
                          [], ...
                          {xlsub6_convert_of2_out1, xlsub6_convert_of3_out1}, ...
                          {xlsub6_a_bw});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/sync_delay
xlsub6_twiddle_stage_2_out5 = xSignal;
xlsub6_sync_delay = xBlock(struct('source', 'Delay', 'name', 'sync_delay'), ...
                           struct('latency', 3, ...
                                  'reg_retiming', 'on'), ...
                           {xlsub6_twiddle_stage_2_out5}, ...
                           {xlsub6_sync_out});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd
xlsub6_twiddle_stage_2_out1 = xSignal;
xlsub6_twiddle_stage_2_out2 = xSignal;
xlsub6_twiddle_stage_2_out3 = xSignal;
xlsub6_twiddle_stage_2_out4 = xSignal;
xlsub6_cadd_sub = xBlock(struct('source', @xlsub6_cadd, 'name', 'cadd'), ...
                     {'Addition', 18, 17, 18, 17, 'on', 19, 17, 'Truncate', 'Wrap', 0}, ...
                     {xlsub6_twiddle_stage_2_out1, xlsub6_twiddle_stage_2_out2, xlsub6_twiddle_stage_2_out3, xlsub6_twiddle_stage_2_out4}, ...
                     {xlsub6_cadd_out1, xlsub6_cadd_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of0
xlsub6_convert_of0_sub = xBlock(struct('source', @xlsub6_convert_of0, 'name', 'convert_of0'), ...
                            {19, 18, 18, 17, 1, 'Wrap', 'Truncate'}, ...
                            {xlsub6_Scale0_out1}, ...
                            {xlsub6_convert_of0_out1, xlsub6_convert_of0_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of1
xlsub6_convert_of1_sub = xBlock(struct('source', @xlsub6_convert_of1, 'name', 'convert_of1'), ...
                            {19, 18, 18, 17, 1, 'Wrap', 'Truncate'}, ...
                            {xlsub6_Scale1_out1}, ...
                            {xlsub6_convert_of1_out1, xlsub6_convert_of1_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of2
xlsub6_convert_of2_sub = xBlock(struct('source', @xlsub6_convert_of2, 'name', 'convert_of2'), ...
                            {19, 18, 18, 17, 1, 'Wrap', 'Truncate'}, ...
                            {xlsub6_Scale2_out1}, ...
                            {xlsub6_convert_of2_out1, xlsub6_convert_of2_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of3
xlsub6_convert_of3_sub = xBlock(struct('source', @xlsub6_convert_of3, 'name', 'convert_of3'), ...
                            {19, 18, 18, 17, 1, 'Wrap', 'Truncate'}, ...
                            {xlsub6_Scale3_out1}, ...
                            {xlsub6_convert_of3_out1, xlsub6_convert_of3_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub
xlsub6_csub_sub = xBlock(struct('source', @xlsub6_csub, 'name', 'csub'), ...
                     {'Subtraction', 18, 17, 18, 17, 'on', 19, 17, 'Truncate', 'Wrap', 0}, ...
                     {xlsub6_twiddle_stage_2_out1, xlsub6_twiddle_stage_2_out2, xlsub6_twiddle_stage_2_out3, xlsub6_twiddle_stage_2_out4}, ...
                     {xlsub6_csub_out1, xlsub6_csub_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2
xlsub6_twiddle_stage_2_sub = xBlock(struct('source', @xlsub6_twiddle_stage_2, 'name', 'twiddle_stage_2'), ...
                                {8, 18, 2, 3, 2, 1, 'logic', 3}, ...
                                {xlsub6_a, xlsub6_b, xlsub6_sync}, ...
                                {xlsub6_twiddle_stage_2_out1, xlsub6_twiddle_stage_2_out2, xlsub6_twiddle_stage_2_out3, xlsub6_twiddle_stage_2_out4, xlsub6_twiddle_stage_2_out5});



function xlsub6_cadd(mode, n_bits_a, bin_pt_a, n_bits_b, bin_pt_b, full_precision, n_bits_c, bin_pt_c, quantization, overflow, cast_latency)



%% inports
xlsub7_a_re = xInport('a_re');
xlsub7_a_im = xInport('a_im');
xlsub7_b_re = xInport('b_re');
xlsub7_b_im = xInport('b_im');

%% outports
xlsub7_c_re = xOutport('c_re');
xlsub7_c_im = xOutport('c_im');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/DSP48E
xlsub7_Reinterpret_A_out1 = xSignal;
xlsub7_Reinterpret_B_out1 = xSignal;
xlsub7_Reinterpret_C_out1 = xSignal;
xlsub7_opmode_out1 = xSignal;
xlsub7_alumode_out1 = xSignal;
xlsub7_carryin_out1 = xSignal;
xlsub7_carryinsel_out1 = xSignal;
xlsub7_DSP48E_out1 = xSignal;
xlsub7_DSP48E = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E'), ...
                       struct('use_creg', 'on', ...
                              'addsub_mode', 'TWO24'), ...
                       {xlsub7_Reinterpret_A_out1, xlsub7_Reinterpret_B_out1, xlsub7_Reinterpret_C_out1, xlsub7_opmode_out1, xlsub7_alumode_out1, xlsub7_carryin_out1, xlsub7_carryinsel_out1}, ...
                       {xlsub7_DSP48E_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/Reinterpret_A
xlsub7_Slice_A_out1 = xSignal;
xlsub7_Reinterpret_A = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret_A'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_Slice_A_out1}, ...
                              {xlsub7_Reinterpret_A_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/Reinterpret_B
xlsub7_Slice_B_out1 = xSignal;
xlsub7_Reinterpret_B = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret_B'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_Slice_B_out1}, ...
                              {xlsub7_Reinterpret_B_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/Reinterpret_C
xlsub7_concat_a_out1 = xSignal;
xlsub7_Reinterpret_C = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret_C'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_concat_a_out1}, ...
                              {xlsub7_Reinterpret_C_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/Slice_A
xlsub7_concat_b_out1 = xSignal;
xlsub7_Slice_A = xBlock(struct('source', 'Slice', 'name', 'Slice_A'), ...
                        struct('nbits', 30), ...
                        {xlsub7_concat_b_out1}, ...
                        {xlsub7_Slice_A_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/Slice_B
xlsub7_Slice_B = xBlock(struct('source', 'Slice', 'name', 'Slice_B'), ...
                        struct('nbits', 18, ...
                               'mode', 'Lower Bit Location + Width'), ...
                        {xlsub7_concat_b_out1}, ...
                        {xlsub7_Slice_B_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/alumode
xlsub7_alumode = xBlock(struct('source', 'Constant', 'name', 'alumode'), ...
                        struct('arith_type', 'Unsigned', ...
                               'const', 0, ...
                               'n_bits', 4, ...
                               'bin_pt', 0), ...
                        {}, ...
                        {xlsub7_alumode_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/carryin
xlsub7_carryin = xBlock(struct('source', 'Constant', 'name', 'carryin'), ...
                        struct('arith_type', 'Unsigned', ...
                               'const', 0, ...
                               'n_bits', 1, ...
                               'bin_pt', 0), ...
                        {}, ...
                        {xlsub7_carryin_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/carryinsel
xlsub7_carryinsel = xBlock(struct('source', 'Constant', 'name', 'carryinsel'), ...
                           struct('arith_type', 'Unsigned', ...
                                  'const', 0, ...
                                  'n_bits', 3, ...
                                  'bin_pt', 0), ...
                           {}, ...
                           {xlsub7_carryinsel_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/cast_c_im
xlsub7_reinterp_c_im_out1 = xSignal;
xlsub7_cast_c_im = xBlock(struct('source', 'Convert', 'name', 'cast_c_im'), ...
                          struct('n_bits', 19, ...
                                 'bin_pt', 17, ...
                                 'pipeline', 'on'), ...
                          {xlsub7_reinterp_c_im_out1}, ...
                          {xlsub7_c_im});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/cast_c_re
xlsub7_reinterp_c_re_out1 = xSignal;
xlsub7_cast_c_re = xBlock(struct('source', 'Convert', 'name', 'cast_c_re'), ...
                          struct('n_bits', 19, ...
                                 'bin_pt', 17, ...
                                 'pipeline', 'on'), ...
                          {xlsub7_reinterp_c_re_out1}, ...
                          {xlsub7_c_re});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/concat_a
xlsub7_reinterp_a_re_out1 = xSignal;
xlsub7_reinterp_a_im_out1 = xSignal;
xlsub7_concat_a = xBlock(struct('source', 'Concat', 'name', 'concat_a'), ...
                         [], ...
                         {xlsub7_reinterp_a_re_out1, xlsub7_reinterp_a_im_out1}, ...
                         {xlsub7_concat_a_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/concat_b
xlsub7_reinterp_b_re_out1 = xSignal;
xlsub7_reinterp_b_im_out1 = xSignal;
xlsub7_concat_b = xBlock(struct('source', 'Concat', 'name', 'concat_b'), ...
                         [], ...
                         {xlsub7_reinterp_b_re_out1, xlsub7_reinterp_b_im_out1}, ...
                         {xlsub7_concat_b_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/opmode
xlsub7_opmode = xBlock(struct('source', 'Constant', 'name', 'opmode'), ...
                       struct('arith_type', 'Unsigned', ...
                              'const', 51, ...
                              'n_bits', 7, ...
                              'bin_pt', 0), ...
                       {}, ...
                       {xlsub7_opmode_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/realign_a_im
xlsub7_realign_a_im_out1 = xSignal;
xlsub7_realign_a_im = xBlock(struct('source', 'Convert', 'name', 'realign_a_im'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_a_im}, ...
                             {xlsub7_realign_a_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/realign_a_re
xlsub7_realign_a_re_out1 = xSignal;
xlsub7_realign_a_re = xBlock(struct('source', 'Convert', 'name', 'realign_a_re'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_a_re}, ...
                             {xlsub7_realign_a_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/realign_b_im
xlsub7_realign_b_im_out1 = xSignal;
xlsub7_realign_b_im = xBlock(struct('source', 'Convert', 'name', 'realign_b_im'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_b_im}, ...
                             {xlsub7_realign_b_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/realign_b_re
xlsub7_realign_b_re_out1 = xSignal;
xlsub7_realign_b_re = xBlock(struct('source', 'Convert', 'name', 'realign_b_re'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_b_re}, ...
                             {xlsub7_realign_b_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/reinterp_a_im
xlsub7_reinterp_a_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_a_im'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_a_im_out1}, ...
                              {xlsub7_reinterp_a_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/reinterp_a_re
xlsub7_reinterp_a_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_a_re'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_a_re_out1}, ...
                              {xlsub7_reinterp_a_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/reinterp_b_im
xlsub7_reinterp_b_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_b_im'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_b_im_out1}, ...
                              {xlsub7_reinterp_b_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/reinterp_b_re
xlsub7_reinterp_b_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_b_re'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_b_re_out1}, ...
                              {xlsub7_reinterp_b_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/reinterp_c_im
xlsub7_slice_c_im_out1 = xSignal;
xlsub7_reinterp_c_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_c_im'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on', ...
                                     'bin_pt', 21), ...
                              {xlsub7_slice_c_im_out1}, ...
                              {xlsub7_reinterp_c_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/reinterp_c_re
xlsub7_slice_c_re_out1 = xSignal;
xlsub7_reinterp_c_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_c_re'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on', ...
                                     'bin_pt', 21), ...
                              {xlsub7_slice_c_re_out1}, ...
                              {xlsub7_reinterp_c_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/slice_c_im
xlsub7_slice_c_im = xBlock(struct('source', 'Slice', 'name', 'slice_c_im'), ...
                           struct('nbits', 24, ...
                                  'mode', 'Lower Bit Location + Width'), ...
                           {xlsub7_DSP48E_out1}, ...
                           {xlsub7_slice_c_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/cadd/slice_c_re
xlsub7_slice_c_re = xBlock(struct('source', 'Slice', 'name', 'slice_c_re'), ...
                           struct('nbits', 24, ...
                                  'mode', 'Lower Bit Location + Width', ...
                                  'bit0', 24), ...
                           {xlsub7_DSP48E_out1}, ...
                           {xlsub7_slice_c_re_out1});



end

function xlsub6_convert_of0(bit_width_i, binary_point_i, bit_width_o, binary_point_o, latency, overflow, quantization)



%% inports
xlsub7_din = xInport('din');

%% outports
xlsub7_dout = xOutport('dout');
xlsub7_of = xOutport('of');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of0/convert
xlsub7_convert = xBlock(struct('source', 'Convert', 'name', 'convert'), ...
                        struct('n_bits', bit_width_o, ...
                               'bin_pt', binary_point_o, ...
                               'latency', latency, ...
                               'pipeline', 'on'), ...
                        {xlsub7_din}, ...
                        {xlsub7_dout});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of0/never
xlsub7_never = xBlock(struct('source', 'Constant', 'name', 'never'), ...
                      struct('arith_type', 'Boolean', ...
                             'const', 0, ...
                             'explicit_period', 'on'), ...
                      {}, ...
                      {xlsub7_of});



end

function xlsub6_convert_of1(bit_width_i, binary_point_i, bit_width_o, binary_point_o, latency, overflow, quantization)



%% inports
xlsub7_din = xInport('din');

%% outports
xlsub7_dout = xOutport('dout');
xlsub7_of = xOutport('of');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of1/convert
xlsub7_convert = xBlock(struct('source', 'Convert', 'name', 'convert'), ...
                        struct('n_bits', bit_width_o, ...
                               'bin_pt', binary_point_o, ...
                               'latency', latency, ...
                               'pipeline', 'on'), ...
                        {xlsub7_din}, ...
                        {xlsub7_dout});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of1/never
xlsub7_never = xBlock(struct('source', 'Constant', 'name', 'never'), ...
                      struct('arith_type', 'Boolean', ...
                             'const', 0, ...
                             'explicit_period', 'on'), ...
                      {}, ...
                      {xlsub7_of});



end

function xlsub6_convert_of2(bit_width_i, binary_point_i, bit_width_o, binary_point_o, latency, overflow, quantization)



%% inports
xlsub7_din = xInport('din');

%% outports
xlsub7_dout = xOutport('dout');
xlsub7_of = xOutport('of');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of2/convert
xlsub7_convert = xBlock(struct('source', 'Convert', 'name', 'convert'), ...
                        struct('n_bits', bit_width_o, ...
                               'bin_pt', binary_point_o, ...
                               'latency', latency, ...
                               'pipeline', 'on'), ...
                        {xlsub7_din}, ...
                        {xlsub7_dout});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of2/never
xlsub7_never = xBlock(struct('source', 'Constant', 'name', 'never'), ...
                      struct('arith_type', 'Boolean', ...
                             'const', 0, ...
                             'explicit_period', 'on'), ...
                      {}, ...
                      {xlsub7_of});



end

function xlsub6_convert_of3(bit_width_i, binary_point_i, bit_width_o, binary_point_o, latency, overflow, quantization)



%% inports
xlsub7_din = xInport('din');

%% outports
xlsub7_dout = xOutport('dout');
xlsub7_of = xOutport('of');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of3/convert
xlsub7_convert = xBlock(struct('source', 'Convert', 'name', 'convert'), ...
                        struct('n_bits', bit_width_o, ...
                               'bin_pt', binary_point_o, ...
                               'latency', latency, ...
                               'pipeline', 'on'), ...
                        {xlsub7_din}, ...
                        {xlsub7_dout});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/convert_of3/never
xlsub7_never = xBlock(struct('source', 'Constant', 'name', 'never'), ...
                      struct('arith_type', 'Boolean', ...
                             'const', 0, ...
                             'explicit_period', 'on'), ...
                      {}, ...
                      {xlsub7_of});



end

function xlsub6_csub(mode, n_bits_a, bin_pt_a, n_bits_b, bin_pt_b, full_precision, n_bits_c, bin_pt_c, quantization, overflow, cast_latency)



%% inports
xlsub7_a_re = xInport('a_re');
xlsub7_a_im = xInport('a_im');
xlsub7_b_re = xInport('b_re');
xlsub7_b_im = xInport('b_im');

%% outports
xlsub7_c_re = xOutport('c_re');
xlsub7_c_im = xOutport('c_im');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/DSP48E
xlsub7_Reinterpret_A_out1 = xSignal;
xlsub7_Reinterpret_B_out1 = xSignal;
xlsub7_Reinterpret_C_out1 = xSignal;
xlsub7_opmode_out1 = xSignal;
xlsub7_alumode_out1 = xSignal;
xlsub7_carryin_out1 = xSignal;
xlsub7_carryinsel_out1 = xSignal;
xlsub7_DSP48E_out1 = xSignal;
xlsub7_DSP48E = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E'), ...
                       struct('use_creg', 'on', ...
                              'addsub_mode', 'TWO24'), ...
                       {xlsub7_Reinterpret_A_out1, xlsub7_Reinterpret_B_out1, xlsub7_Reinterpret_C_out1, xlsub7_opmode_out1, xlsub7_alumode_out1, xlsub7_carryin_out1, xlsub7_carryinsel_out1}, ...
                       {xlsub7_DSP48E_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/Reinterpret_A
xlsub7_Slice_A_out1 = xSignal;
xlsub7_Reinterpret_A = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret_A'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_Slice_A_out1}, ...
                              {xlsub7_Reinterpret_A_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/Reinterpret_B
xlsub7_Slice_B_out1 = xSignal;
xlsub7_Reinterpret_B = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret_B'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_Slice_B_out1}, ...
                              {xlsub7_Reinterpret_B_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/Reinterpret_C
xlsub7_concat_a_out1 = xSignal;
xlsub7_Reinterpret_C = xBlock(struct('source', 'Reinterpret', 'name', 'Reinterpret_C'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_concat_a_out1}, ...
                              {xlsub7_Reinterpret_C_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/Slice_A
xlsub7_concat_b_out1 = xSignal;
xlsub7_Slice_A = xBlock(struct('source', 'Slice', 'name', 'Slice_A'), ...
                        struct('nbits', 30), ...
                        {xlsub7_concat_b_out1}, ...
                        {xlsub7_Slice_A_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/Slice_B
xlsub7_Slice_B = xBlock(struct('source', 'Slice', 'name', 'Slice_B'), ...
                        struct('nbits', 18, ...
                               'mode', 'Lower Bit Location + Width'), ...
                        {xlsub7_concat_b_out1}, ...
                        {xlsub7_Slice_B_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/alumode
xlsub7_alumode = xBlock(struct('source', 'Constant', 'name', 'alumode'), ...
                        struct('arith_type', 'Unsigned', ...
                               'const', 3, ...
                               'n_bits', 4, ...
                               'bin_pt', 0), ...
                        {}, ...
                        {xlsub7_alumode_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/carryin
xlsub7_carryin = xBlock(struct('source', 'Constant', 'name', 'carryin'), ...
                        struct('arith_type', 'Unsigned', ...
                               'const', 0, ...
                               'n_bits', 1, ...
                               'bin_pt', 0), ...
                        {}, ...
                        {xlsub7_carryin_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/carryinsel
xlsub7_carryinsel = xBlock(struct('source', 'Constant', 'name', 'carryinsel'), ...
                           struct('arith_type', 'Unsigned', ...
                                  'const', 0, ...
                                  'n_bits', 3, ...
                                  'bin_pt', 0), ...
                           {}, ...
                           {xlsub7_carryinsel_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/cast_c_im
xlsub7_reinterp_c_im_out1 = xSignal;
xlsub7_cast_c_im = xBlock(struct('source', 'Convert', 'name', 'cast_c_im'), ...
                          struct('n_bits', 19, ...
                                 'bin_pt', 17, ...
                                 'pipeline', 'on'), ...
                          {xlsub7_reinterp_c_im_out1}, ...
                          {xlsub7_c_im});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/cast_c_re
xlsub7_reinterp_c_re_out1 = xSignal;
xlsub7_cast_c_re = xBlock(struct('source', 'Convert', 'name', 'cast_c_re'), ...
                          struct('n_bits', 19, ...
                                 'bin_pt', 17, ...
                                 'pipeline', 'on'), ...
                          {xlsub7_reinterp_c_re_out1}, ...
                          {xlsub7_c_re});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/concat_a
xlsub7_reinterp_a_re_out1 = xSignal;
xlsub7_reinterp_a_im_out1 = xSignal;
xlsub7_concat_a = xBlock(struct('source', 'Concat', 'name', 'concat_a'), ...
                         [], ...
                         {xlsub7_reinterp_a_re_out1, xlsub7_reinterp_a_im_out1}, ...
                         {xlsub7_concat_a_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/concat_b
xlsub7_reinterp_b_re_out1 = xSignal;
xlsub7_reinterp_b_im_out1 = xSignal;
xlsub7_concat_b = xBlock(struct('source', 'Concat', 'name', 'concat_b'), ...
                         [], ...
                         {xlsub7_reinterp_b_re_out1, xlsub7_reinterp_b_im_out1}, ...
                         {xlsub7_concat_b_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/opmode
xlsub7_opmode = xBlock(struct('source', 'Constant', 'name', 'opmode'), ...
                       struct('arith_type', 'Unsigned', ...
                              'const', 51, ...
                              'n_bits', 7, ...
                              'bin_pt', 0), ...
                       {}, ...
                       {xlsub7_opmode_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/realign_a_im
xlsub7_realign_a_im_out1 = xSignal;
xlsub7_realign_a_im = xBlock(struct('source', 'Convert', 'name', 'realign_a_im'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_a_im}, ...
                             {xlsub7_realign_a_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/realign_a_re
xlsub7_realign_a_re_out1 = xSignal;
xlsub7_realign_a_re = xBlock(struct('source', 'Convert', 'name', 'realign_a_re'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_a_re}, ...
                             {xlsub7_realign_a_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/realign_b_im
xlsub7_realign_b_im_out1 = xSignal;
xlsub7_realign_b_im = xBlock(struct('source', 'Convert', 'name', 'realign_b_im'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_b_im}, ...
                             {xlsub7_realign_b_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/realign_b_re
xlsub7_realign_b_re_out1 = xSignal;
xlsub7_realign_b_re = xBlock(struct('source', 'Convert', 'name', 'realign_b_re'), ...
                             struct('n_bits', 24, ...
                                    'bin_pt', 21, ...
                                    'pipeline', 'on'), ...
                             {xlsub7_b_re}, ...
                             {xlsub7_realign_b_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/reinterp_a_im
xlsub7_reinterp_a_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_a_im'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_a_im_out1}, ...
                              {xlsub7_reinterp_a_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/reinterp_a_re
xlsub7_reinterp_a_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_a_re'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_a_re_out1}, ...
                              {xlsub7_reinterp_a_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/reinterp_b_im
xlsub7_reinterp_b_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_b_im'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_b_im_out1}, ...
                              {xlsub7_reinterp_b_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/reinterp_b_re
xlsub7_reinterp_b_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_b_re'), ...
                              struct('force_arith_type', 'on', ...
                                     'force_bin_pt', 'on'), ...
                              {xlsub7_realign_b_re_out1}, ...
                              {xlsub7_reinterp_b_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/reinterp_c_im
xlsub7_slice_c_im_out1 = xSignal;
xlsub7_reinterp_c_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_c_im'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on', ...
                                     'bin_pt', 21), ...
                              {xlsub7_slice_c_im_out1}, ...
                              {xlsub7_reinterp_c_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/reinterp_c_re
xlsub7_slice_c_re_out1 = xSignal;
xlsub7_reinterp_c_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_c_re'), ...
                              struct('force_arith_type', 'on', ...
                                     'arith_type', 'Signed  (2''s comp)', ...
                                     'force_bin_pt', 'on', ...
                                     'bin_pt', 21), ...
                              {xlsub7_slice_c_re_out1}, ...
                              {xlsub7_reinterp_c_re_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/slice_c_im
xlsub7_slice_c_im = xBlock(struct('source', 'Slice', 'name', 'slice_c_im'), ...
                           struct('nbits', 24, ...
                                  'mode', 'Lower Bit Location + Width'), ...
                           {xlsub7_DSP48E_out1}, ...
                           {xlsub7_slice_c_im_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/csub/slice_c_re
xlsub7_slice_c_re = xBlock(struct('source', 'Slice', 'name', 'slice_c_re'), ...
                           struct('nbits', 24, ...
                                  'mode', 'Lower Bit Location + Width', ...
                                  'bit0', 24), ...
                           {xlsub7_DSP48E_out1}, ...
                           {xlsub7_slice_c_re_out1});



end

function xlsub6_twiddle_stage_2(FFTSize, input_bit_width, add_latency, mult_latency, bram_latency, conv_latency, opt_target, negate_latency)


% Mask Initialization code




%% inports
xlsub7_a = xInport('a');
xlsub7_b = xInport('b');
xlsub7_sync = xInport('sync');

%% outports
xlsub7_a_re = xOutport('a_re');
xlsub7_a_im = xOutport('a_im');
xlsub7_bw_re = xOutport('bw_re');
xlsub7_bw_im = xOutport('bw_im');
xlsub7_sync_out = xOutport('sync_out');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/c_to_ri
xlsub7_c_to_ri_out1 = xSignal;
xlsub7_c_to_ri_out2 = xSignal;
xlsub7_c_to_ri = xBlock(struct('source', 'casper_library_misc/c_to_ri', 'name', 'c_to_ri'), ...
                        struct('n_bits', input_bit_width, ...
                               'bin_pt', input_bit_width-1), ...
                        {xlsub7_a}, ...
                        {xlsub7_c_to_ri_out1, xlsub7_c_to_ri_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/c_to_ri1
xlsub7_c_to_ri1_out1 = xSignal;
xlsub7_c_to_ri1_out2 = xSignal;
xlsub7_c_to_ri1 = xBlock(struct('source', 'casper_library_misc/c_to_ri', 'name', 'c_to_ri1'), ...
                         struct('n_bits', input_bit_width, ...
                                'bin_pt', input_bit_width-1), ...
                         {xlsub7_b}, ...
                         {xlsub7_c_to_ri1_out1, xlsub7_c_to_ri1_out2});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/counter
xlsub7_delay5_out1 = xSignal;
xlsub7_counter_out1 = xSignal;
xlsub7_counter = xBlock(struct('source', 'Counter', 'name', 'counter'), ...
                        struct('n_bits', FFTSize - 1 , ...
                               'rst', 'on', ...
                               'use_behavioral_HDL', 'on'), ...
                        {xlsub7_delay5_out1}, ...
                        {xlsub7_counter_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/delay0
xlsub7_delay0 = xBlock(struct('source', 'Delay', 'name', 'delay0'), ...
                       struct('latency', negate_latency+mult_latency+conv_latency+add_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub7_c_to_ri_out1}, ...
                       {xlsub7_a_re});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/delay1
xlsub7_delay1 = xBlock(struct('source', 'Delay', 'name', 'delay1'), ...
                       struct('latency', negate_latency+mult_latency+conv_latency+add_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub7_c_to_ri_out2}, ...
                       {xlsub7_a_im});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/delay2
xlsub7_delay2_out1 = xSignal;
xlsub7_delay2 = xBlock(struct('source', 'Delay', 'name', 'delay2'), ...
                       struct('latency', negate_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub7_c_to_ri1_out1}, ...
                       {xlsub7_delay2_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/delay5
xlsub7_delay5 = xBlock(struct('source', 'Delay', 'name', 'delay5'), ...
                       struct('latency', negate_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub7_sync}, ...
                       {xlsub7_delay5_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/delay6
xlsub7_delay6 = xBlock(struct('source', 'Delay', 'name', 'delay6'), ...
                       struct('latency', mult_latency+conv_latency+add_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub7_delay5_out1}, ...
                       {xlsub7_sync_out});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/delay7
xlsub7_delay7_out1 = xSignal;
xlsub7_delay7 = xBlock(struct('source', 'Delay', 'name', 'delay7'), ...
                       struct('latency', negate_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub7_c_to_ri1_out2}, ...
                       {xlsub7_delay7_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/mux0
xlsub7_slice_out1 = xSignal;
xlsub7_mux0 = xBlock(struct('source', 'Mux', 'name', 'mux0'), ...
                     struct('latency', 6), ...
                     {xlsub7_slice_out1, xlsub7_delay2_out1, xlsub7_delay7_out1}, ...
                     {xlsub7_bw_re});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/mux1
xlsub7_negate_out1 = xSignal;
xlsub7_mux1 = xBlock(struct('source', 'Mux', 'name', 'mux1'), ...
                     struct('latency', 6), ...
                     {xlsub7_slice_out1, xlsub7_delay7_out1, xlsub7_negate_out1}, ...
                     {xlsub7_bw_im});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/slice
xlsub7_slice = xBlock(struct('source', 'Slice', 'name', 'slice'), ...
                      [], ...
                      {xlsub7_counter_out1}, ...
                      {xlsub7_slice_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2/negate
xlsub7_negate_sub = xlsub7_negate(input_bit_width, input_bit_width-1, negate_latency, 'dsp48e');
xlsub7_negate_sub.bindPort({xlsub7_c_to_ri1_out1}, {xlsub7_negate_out1});



function xblock_obj = xlsub7_negate(input_bit_width, input_bin_pt, latency, mode)


% Mask Initialization code
config.source = str2func('negate_init');

config.depend = {'negate_init.m'};
xblock_obj = xBlock(config, {input_bit_width,input_bin_pt,latency, mode});



%% inports

%% outports

%% diagram



end

end

end

function xlsub5_delay_b(DelayLen, bram_latency, use_dsp48)



%% inports
xlsub6_In1 = xInport('In1');

%% outports
xlsub6_Out1 = xOutport('Out1');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_b/Constant2
xlsub6_Constant2_out1 = xSignal;
xlsub6_Constant2 = xBlock(struct('source', 'Constant', 'name', 'Constant2'), ...
                          struct('arith_type', 'Boolean', ...
                                 'n_bits', 1, ...
                                 'bin_pt', 0, ...
                                 'explicit_period', 'on'), ...
                          {}, ...
                          {xlsub6_Constant2_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_b/Counter
xlsub6_Counter_out1 = xSignal;
xlsub6_Counter = xBlock(struct('source', 'Counter', 'name', 'Counter'), ...
                        struct('cnt_type', 'Count Limited', ...
                               'cnt_to', DelayLen - bram_latency - 1, ...
                               'n_bits', BitWidth, ...
                               'use_rpm', 'off'), ...
                        {}, ...
                        {xlsub6_Counter_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_b/Single Port RAM
xlsub6_Single_Port_RAM = xBlock(struct('source', 'Single Port RAM', 'name', 'Single Port RAM'), ...
                                struct('depth', 2^BitWidth, ...
                                       'initVector', 0, ...
                                       'write_mode', 'Read Before Write', ...
                                       'latency', bram_latency, ...
                                       'use_rpm', 'off'), ...
                                {xlsub6_Counter_out1, xlsub6_In1, xlsub6_Constant2_out1}, ...
                                {xlsub6_Out1});



end

function xlsub5_delay_f(DelayLen, bram_latency, use_dsp48)



%% inports
xlsub6_In1 = xInport('In1');

%% outports
xlsub6_Out1 = xOutport('Out1');

%% diagram

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_f/Constant2
xlsub6_Constant2_out1 = xSignal;
xlsub6_Constant2 = xBlock(struct('source', 'Constant', 'name', 'Constant2'), ...
                          struct('arith_type', 'Boolean', ...
                                 'n_bits', 1, ...
                                 'bin_pt', 0, ...
                                 'explicit_period', 'on'), ...
                          {}, ...
                          {xlsub6_Constant2_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_f/Counter
xlsub6_Counter_out1 = xSignal;
xlsub6_Counter = xBlock(struct('source', 'Counter', 'name', 'Counter'), ...
                        struct('cnt_type', 'Count Limited', ...
                               'cnt_to', DelayLen - bram_latency - 1, ...
                               'n_bits', BitWidth, ...
                               'use_rpm', 'off'), ...
                        {}, ...
                        {xlsub6_Counter_out1});

% block: single_pol_xblock_tb/fft_wideband_real1/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_f/Single Port RAM
xlsub6_Single_Port_RAM = xBlock(struct('source', 'Single Port RAM', 'name', 'Single Port RAM'), ...
                                struct('depth', 2^BitWidth, ...
                                       'initVector', 0, ...
                                       'write_mode', 'Read Before Write', ...
                                       'latency', bram_latency, ...
                                       'use_rpm', 'off'), ...
                                {xlsub6_Counter_out1, xlsub6_In1, xlsub6_Constant2_out1}, ...
                                {xlsub6_Out1});



end

end

